import java.util.*;
import java.lang.*;
import java.io.*;

class Ankit{
	
	static int solve(String expression, String symbol, int n){
		char[] exp = expression.toCharArray();
		char[] oper = symbol.toCharArray();
		int[][] T = new int[n][n];
		int[][] F = new int[n][n];
		
		for(int i=0; i<n; i++){
			T[i][i] = (exp[i] == 'T') ? 1 : 0;
			F[i][i] = (exp[i] == 'F') ? 1 : 0;
		}
		
		for(int gap=1; gap<n; ++gap){
			for(int i=0, j=gap; j<n; ++j, ++i){
				T[i][j] = F[i][j] = 0;
				
				for(int g=0; g<gap; g++){
					int k = i+g;
					
					int tik = T[i][k] + F[i][k];
					int tkj = T[k+1][j] + F[k+1][j];

					if (oper[k] == '&'){ 
						T[i][j] += T[i][k]*T[k+1][j]; 
						F[i][j] += (tik*tkj - T[i][k]*T[k+1][j]); 
					} 
					if (oper[k] == '|'){ 
						F[i][j] += F[i][k]*F[k+1][j]; 
						T[i][j] += (tik*tkj - F[i][k]*F[k+1][j]); 
					} 
					if (oper[k] == '^'){ 
						T[i][j] += F[i][k]*T[k+1][j] + T[i][k]*F[k+1][j]; 
						F[i][j] += T[i][k]*T[k+1][j] + F[i][k]*F[k+1][j]; 
					}
				}
			}
		}
		return T[0][n-1];
	}

    public static void main(String[] lonar) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
	    int t = Integer.parseInt(br.readLine());
	    while(t-- > 0){
	        String expression = br.readLine();
			String symbol = br.readLine();
			int n = expression.length();
	        int ans = solve(expression, symbol, n);
			System.out.println(ans);
	    }
    }
}


/*
		

*/